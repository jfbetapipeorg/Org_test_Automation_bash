template: true
valuesFilePath: ../values/gitRepoValues.yml

resources:
  - name: S_GradleBuild_5680_0035_GitRepo
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation_bash.path }}
      branches:
        include: {{gitBranch}}

pipelines:
  - name: pipeline_S_GradleBuild_5680_0035
    steps:
      - name: S_GradleBuild_5680_0035_1
        type: GradleBuild
        configuration:
          environmentVariables:
            use_plugin: "true"
          inputResources:
            - name: S_GradleBuild_5680_0035_GitRepo
          integrations:
            - name: s_artifactory
          usesPlugin: "${use_plugin}"
          resolverRepo: test-automation-gradle-remote
          deployerRepo: test-automation-gradle-local
          sourceLocation: "tests/gradle"
          gradleCommand: "hello"
        execution:
          onSuccess:
            - ymlPath="$(find_resource_variable $inputGitRepoResourceName resourcePath)/$(find_step_configuration_value sourceLocation)/.jfrog/projects/gradle.yaml"
            - 'plugin=$(cat "$ymlPath" | grep "usePlugin")'
            - echo "$plugin"
            - 'if [ "$plugin" != "usePlugin: true" ]; then echo "TEST FAILED"; return 1; fi'
            - add_run_variables TEST_SUCCESS=true
      - name: S_GradleBuild_5680_0035_2
        type: Bash
        configuration:
          inputSteps:
            - name: S_GradleBuild_5680_0035_1
        execution:
          onExecute:
            - if [ "$TEST_SUCCESS" != "true" ]; then return 1; fi
