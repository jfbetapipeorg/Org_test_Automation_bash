resources:
  - name: EXT_S_LX_AU_0016_fileSpec
    type: FileSpec
    configuration:
      sourceArtifactory: s_artifactory
      pattern: "test-automation-generic-local/EXT_S_LX_AU_0016_input.tar.gz"

pipelines:
  - name: pipeline_EXT_S_LX_AU_0016
    steps:
      - name: EXT_S_LX_AU_0016_1
        type: Bash
        configuration:
          integrations:
            - name: s_artifactory
          outputResources:
            - name: EXT_S_LX_AU_0016_fileSpec
        execution:
          onExecute:
            - mkdir -p tar
            - echo "${run_id}" > tar/EXT_S_LX_AU_0016_file1.txt
            - echo "${run_id}" > tar/EXT_S_LX_AU_0016_file2.txt
            - tar -czf test.tar.gz ./tar
            - jfrog rt upload test.tar.gz test-automation-generic-local/EXT_S_LX_AU_0016_input.tar.gz

      - name: EXT_S_LX_AU_0016_2
        type: UploadArtifact
        configuration:
          targetPath: test-automation-generic-local/EXT_S_LX_AU_0016/
          explode: true
          integrations:
            - name: s_artifactory
          inputResources:
            - name: EXT_S_LX_AU_0016_fileSpec

      - name: EXT_S_LX_AU_0016_3
        type: Bash
        configuration:
          integrations:
            - name: s_artifactory
          inputSteps:
            - name: EXT_S_LX_AU_0016_2
        execution:
          onExecute:
            - jfrog rt download test-automation-generic-local/EXT_S_LX_AU_0016* ./
            - ls EXT_S_LX_AU_0016/tar
            - if [ ! -f EXT_S_LX_AU_0016/tar/EXT_S_LX_AU_0016_file1.txt ] || [ ! -f EXT_S_LX_AU_0016/tar/EXT_S_LX_AU_0016_file2.txt ]; then return 1; fi
